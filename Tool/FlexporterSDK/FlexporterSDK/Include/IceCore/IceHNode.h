///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	Contains skeleton-code for a hierarchical node.
 *	\file		IceHNode.h
 *	\author		Pierre Terdiman
 *	\date		May, 08, 1999
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef __ICEHNODE_H__
#define __ICEHNODE_H__

	class ICECORE_API HNode
	{
		public:
		//! Constructor
								HNode() : mSonLink(null), mNextLink(null)	{}
		//! Destructor
								~HNode()									{}

		// Hierarchy construction

		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		/**
		 *	Inserts a new node in the hierarchy.
		 *	Only 2 links are used since we only go through the hierarchy in the same unique direction (from root node to end effectors)
		 *	\param		father_node		[in] the current node's father
		 *	\return		Self-reference
		 */
		///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
					HNode&		Insert(HNode* father_node);

		// Hierarchy data
					HNode*		mSonLink;		//!< Child node
					HNode*		mNextLink;		//!< Brother node
	};

#endif // __ICEHNODE_H__
