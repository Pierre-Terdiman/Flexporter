///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 *	FLEXPORTER - a flexible exporter
 *	Copyright (C) 2000-2004 Pierre Terdiman
 *	Homepage: http://www.codercorner.com/Flexporter.htm
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	This file contains the texture-related exported structures.
 *	\file		FLX_AddTexture.h
 *	\author		Pierre Terdiman
 *	\date		April, 4, 2000
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef FLX_ADDTEXTURE_H
#define FLX_ADDTEXTURE_H

	enum UVWSource
	{
		UVW_EXPLICIT,
		UVW_LOCAL_XYZ,
		UVW_VERTEX_COLORS,
		UVW_WORLD_XYZ,

		UVW_FORCE_DWORD		= 0x7fffffff
	};

	//! The texture information class.
	class FLEXPORTER_API TextureDescriptor : public ResourceDescriptor
	{
		public:
		// Constructor / Destructor
									TextureDescriptor();
		virtual						~TextureDescriptor();

				TextureTransform	mTransform;		//!< Texture transform
				UVWSource			mUVWSource;		//!< Origin of mapping coordinates
				udword				mMapChannel;	//!< Explicit map channel for mUVWSource = UVW_EXPLICIT

		// Following fields are only valid if TexnameOnly is false in the ExportSettings structure.
				udword				mWidth;			//!< Texture's width
				udword				mHeight;		//!< Texture's height
				ubyte*				mPixels;		//!< Texture in R,G,B,A order. (always contains Alpha)
				bool				mHasAlpha;		//!< True => Alpha is valid.
		// Texture can be quantized
				ubyte*				mQuantized;		//!< Color indices
				ubyte*				mPalette;		//!< RGB palette (Alpha not available)
	};

#endif // FLX_ADDTEXTURE_H
