///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 *	FLEXPORTER - a flexible exporter
 *	Copyright (C) 2000-2004 Pierre Terdiman
 *	Homepage: http://www.codercorner.com/Flexporter.htm
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	This file contains the space-warp-related exported structures.
 *	\file		FLX_AddSpaceWarp.h
 *	\author		Pierre Terdiman
 *	\date		March, 24, 2003
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef FLX_ADDSPACEWARP_H
#define FLX_ADDSPACEWARP_H

	//! Supported space warp types from MAX.
	enum SWType
	{
		FLX_SWHTYPE_GRAVITY,		//!< Gravity object
		FLX_SWHTYPE_WIND,			//!< Wind object

		FLX_SWTYPE_UNDEFINED		= 0xffffffff
	};

	class FLEXPORTER_API SpaceWarpDescriptor : public ObjectDescriptor
	{
		public:
		// Constructor / Destructor
									SpaceWarpDescriptor();
		virtual						~SpaceWarpDescriptor();

				SWType				mSWType;	//!< Type of space warp
	};

	class FLEXPORTER_API GravityObject : public SpaceWarpDescriptor
	{
		public:
		// Constructor / Destructor
									GravityObject();
		virtual						~GravityObject();

				float				mStrength;
				float				mDecay;
				float				mDispLength;
	};

	class FLEXPORTER_API WindObject : public SpaceWarpDescriptor
	{
		public:
		// Constructor / Destructor
									WindObject();
		virtual						~WindObject();

				float				mStrength;
				float				mDecay;
				float				mDispLength;
				float				mTurbulence;
				float				mFrequency;
				float				mScale;
	};

#endif // FLX_ADDSPACEWARP_H
