///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	Ridged Multifractal from "Texturing & Modeling - a procedural approach"
 *	\file		IceRidgedFractal.h
 *	\author		Pierre Terdiman
 *	\date		January, 29, 2000
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef ICERIDGEDFRACTAL_H
#define ICERIDGEDFRACTAL_H

	class ICEMATHS_API RidgedFractal
	{
		public:
			// Constructor/Destructor
								RidgedFractal(float h, float lacunarity, float octaves, float offset, float gain);
								~RidgedFractal();

				float			Compute(const Point& vector);

		protected:
				PerlinNoise		mNoise;
				float			mLacunarity;
				float			mOctaves;
				float			mOffset;
				float			mGain;

				float*			mExponentArray;
	};

#endif // ICERIDGEDFRACTAL_H
