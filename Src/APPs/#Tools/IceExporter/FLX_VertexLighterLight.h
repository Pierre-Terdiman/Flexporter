///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 *	FLEXPORTER - a flexible exporter
 *	Copyright (C) 2000-2004 Pierre Terdiman
 *	Homepage: http://www.codercorner.com/Flexporter.htm
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	This file contains...
 *	\file		FLX_VertexLighterLight.h
 *	\author		Pierre Terdiman
 *	\date		August, 28, 2002
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef FLX_VERTEXLIGHTERLIGHT_H
#define FLX_VERTEXLIGHTERLIGHT_H

#ifdef COMPILE_VERTEX_LIGHTER

	class VertexLighterLight : public VertexLighterBase
	{
		public:
		// Constructor/Destructor
								VertexLighterLight();
		virtual					~VertexLighterLight();

		// Data access
		inline_	const Point&	GetPosition()			const	{ return mPosition;			}
		inline_	ObjLightDesc*	GetLightDescriptor()	const	{ return mLightDescriptor;	}
		inline_ BOOL			IsShadowCaster()		const	{ return mCastShadows;		}

				BOOL			GetLightingContribution(Point& lighting_sample, Point& specular_sample, Point& lighting_direction, const Point& world_point, const Point& world_normal) const;

				BOOL			Exclude(INode* max_node)	const;

		virtual	bool			Build(INode* node);

		private:
				ObjLightDesc*	mLightDescriptor;
				Point			mPosition;
				BOOL			mCastShadows;
	};

#endif

#endif // FLX_VERTEXLIGHTERLIGHT_H
