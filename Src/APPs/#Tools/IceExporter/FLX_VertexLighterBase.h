///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*
 *	FLEXPORTER - a flexible exporter
 *	Copyright (C) 2000-2004 Pierre Terdiman
 *	Homepage: http://www.codercorner.com/Flexporter.htm
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	This file contains the base class for the vertex lighter.
 *	\file		FLX_VertexLighterBase.h
 *	\author		Pierre Terdiman
 *	\date		August, 28, 2002
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef FLX_VERTEXLIGHTERBASE_H
#define FLX_VERTEXLIGHTERBASE_H

#ifdef COMPILE_VERTEX_LIGHTER

	// Forward declarations
	class VertexLighter;

	class VertexLighterBase
	{
		public:
		// Constructor/Destructor
								VertexLighterBase();
		virtual					~VertexLighterBase();

		virtual	bool			Build(INode* node);

		protected:
		static	VertexLighter*	mCurrentLighter;
		static	Interface*		mInterface;
	};

	//! A container customized for VertexLighterBase objects
	class VLObjects : private Container
	{
		public:
		// Constructor/Destructor
									VLObjects()									{}
									~VLObjects()								{}

		inline_	void				AddObject(const VertexLighterBase* object)	{ Add(udword(object));						}

		inline_	udword				GetNbObjects()						const	{ return GetNbEntries();		}
		inline_	VertexLighterBase*	GetObject(udword i)					const	{ return (VertexLighterBase*)GetEntry(i);	}
		inline_	VertexLighterBase**	GetObjects()						const	{ return (VertexLighterBase**)GetEntries();	}
	};

#endif

#endif // FLX_VERTEXLIGHTERBASE_H
